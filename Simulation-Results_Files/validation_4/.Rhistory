dplyr::group_by(sampleid, phase) %>%
dplyr::summarize(av_fwcli = mean(fwcli), sd_fwcli = sd(fwcli),
av_cli = mean(avcli), sd_cli = sd(avcli), cv_cli_percent = sd(avcli)/mean(avcli),
av_tes = mean(avtes), sd_tes = sd(avtes), cv_tes_percent = sd(avtes)/mean(avtes),
length_previous_phase = mean(gen),
sd_gen_phases = sd(gen))
df_summary <- cbind(df_count$n, df_summary)
colnames(df_summary)[1] ="n"
#CI 95%: z* sd/sqrt(population)
df_summary$ci_fwcli <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_fwcli/sqrt(df_summary$n))
df_summary$ci_cli <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_cli/sqrt(df_summary$n))
df_summary$ci_tes <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_tes/sqrt(df_summary$n))
View(df_summary)
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
g<-ggplot()+
geom_line(data=df,aes(x=gen,y=avtes,group=rep,color=phase), alpha = 1, linewidth = 0.7)+
xlab("generation")+
ylab("TEs insertions per diploid individual")+
theme(legend.position="none")+
scale_colour_manual(values=p)+
facet_wrap(~sampleid, labeller = labeller(sampleid =
c("b100" = "bias = 100",
"b90" = "bias = 90",
"b80" = "bias = 80",
"b70" = "bias = 70",
"b60" = "bias = 60",
"b50" = "bias = 50",
"b40" = "bias = 40",
"b30" = "bias = 30",
"b20" = "bias = 20",
"b10" = "bias = 10",
"b0" = "bias = 0",
"mb10" = "bias = -10",
"mb20" = "bias = -20",
"mb30" = "bias = -30",
"mb40" = "bias = -40",
"mb50" = "bias = -50",
"mb60" = "bias = -60",
"mb70" = "bias = -70",
"mb80" = "bias = -80",
"mb90" = "bias = -90",
"mb100" = "bias = -100")))
plot(g)
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame(df1)
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select (df2,-c(22))
df_count <- df2 %>%
dplyr::count(sampleid, phase)
df_summary <- df2 %>%
dplyr::group_by(sampleid, phase) %>%
dplyr::summarize(av_fwcli = mean(fwcli), sd_fwcli = sd(fwcli),
av_cli = mean(avcli), sd_cli = sd(avcli), cv_cli_percent = sd(avcli)/mean(avcli),
av_tes = mean(avtes), sd_tes = sd(avtes), cv_tes_percent = sd(avtes)/mean(avtes),
length_previous_phase = mean(gen),
sd_gen_phases = sd(gen))
df_summary <- cbind(df_count$n, df_summary)
colnames(df_summary)[1] ="n"
#CI 95%: z* sd/sqrt(population)
df_summary$ci_fwcli <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_fwcli/sqrt(df_summary$n))
df_summary$ci_cli <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_cli/sqrt(df_summary$n))
df_summary$ci_tes <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_tes/sqrt(df_summary$n))
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x < nrow(df1) - 1) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x + 1
}
# Summary statistics
df2<-select(df2,-c(22))
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame(df1)
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select(df2,-c(22))
df_count <- df2 %>%
dplyr::count(sampleid, phase)
View(df_count)
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select(df2,-c(22))
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select(df2,-c(22))
# Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck <- 1
x <- 1
y <- 1
while (x < nrow(df1)) {
if (repcheck != df1[x, 1]) {
y <- 1
}
if (y == 1) {
if (df1[x, 12] == "shot") {
df2 <- rbind(df2, df1[x, ])
y <- 2
repcheck <- df1[x, 1]
}
}
if (y == 2) {
if (df1[x, 12] == "inac") {
df2 <- rbind(df2, df1[x, ])
y <- 1
}
}
x <- x + 1
}
# Summary statistics
df2 <- subset(df2, select = -c(22))
df_count <- df2 %>%
dplyr::count(sampleid, phase)
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
g<-ggplot()+
geom_line(data=df,aes(x=gen,y=avtes,group=rep,color=phase), alpha = 1, linewidth = 0.7)+
xlab("generation")+
ylab("TEs insertions per diploid individual")+
theme(legend.position="none")+
scale_colour_manual(values=p)+
facet_wrap(~sampleid, labeller = labeller(sampleid =
c("b100" = "bias = 100",
"b90" = "bias = 90",
"b80" = "bias = 80",
"b70" = "bias = 70",
"b60" = "bias = 60",
"b50" = "bias = 50",
"b40" = "bias = 40",
"b30" = "bias = 30",
"b20" = "bias = 20",
"b10" = "bias = 10",
"b0" = "bias = 0",
"mb10" = "bias = -10",
"mb20" = "bias = -20",
"mb30" = "bias = -30",
"mb40" = "bias = -40",
"mb50" = "bias = -50",
"mb60" = "bias = -60",
"mb70" = "bias = -70",
"mb80" = "bias = -80",
"mb90" = "bias = -90",
"mb100" = "bias = -100")))
plot(g)
# Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck <- 1
x <- 1
y <- 1
while (x < nrow(df1)) {
if (repcheck != df1[x, 1]) {
y <- 1
}
if (y == 1) {
if (df1[x, 12] == "shot") {
df2 <- rbind(df2, df1[x, ])
y <- 2
repcheck <- df1[x, 1]
}
}
if (y == 2) {
if (df1[x, 12] == "inac") {
df2 <- rbind(df2, df1[x, ])
y <- 1
}
}
x <- x + 1
}
#Summary statistics
df2<-select(df2,-c(22))
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
df$phase
df$sampleid
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
g<-ggplot()+
geom_line(data=df,aes(x=gen,y=avtes,group=rep,color=phase), alpha = 1, linewidth = 0.7)+
xlab("generation")+
ylab("TEs insertions per diploid individual")+
theme(legend.position="none")+
scale_colour_manual(values=p)+
facet_wrap(~sampleid, labeller = labeller(sampleid =
c("b100" = "bias = 100",
"b90" = "bias = 90",
"b80" = "bias = 80",
"b70" = "bias = 70",
"b60" = "bias = 60",
"b50" = "bias = 50",
"b40" = "bias = 40",
"b30" = "bias = 30",
"b20" = "bias = 20",
"b10" = "bias = 10",
"b0" = "bias = 0",
"mb10" = "bias = -10",
"mb20" = "bias = -20",
"mb30" = "bias = -30",
"mb40" = "bias = -40",
"mb50" = "bias = -50",
"mb60" = "bias = -60",
"mb70" = "bias = -70",
"mb80" = "bias = -80",
"mb90" = "bias = -90",
"mb100" = "bias = -100")))
plot(g)
# Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
# Divide in shot and inact pahses
df1 <- subset(df$phase %in% c("shot", "inac"))
# Divide in shot and inact pahses
df1 <- subset(df, df$phase %in% c("shot", "inac"))
df2 <- data.frame()
# Divide in shot and inact pahses
df1 <- subset(df, df$phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck <- 1
x <- 1
y <- 1
while (x < nrow(df1)) {
if (repcheck != df1[x, 1]) {
y <- 1
}
if (y == 1) {
if (df1[x, 12] == "shot") {
df2 <- rbind(df2, df1[x, ])
y <- 2
repcheck <- df1[x, 1]
}
}
if (y == 2) {
if (df1[x, 12] == "inac") {
df2 <- rbind(df2, df1[x, ])
y <- 1
}
}
x <- x + 1
}
#Summary statistics
df2<-select(df2,-c(22))
# check the unique values in the 'phase' column
unique(df$phase)
# count the number of rows in 'df' for each unique value of 'phase'
table(df$phase)
View(df)
setwd("~/github/Insertion-Bias-TE/Simulation-Results_Files/validation_2")
library(ggplot2)
library(dplyr)
library(patchwork)
validation<-read.table("2023_04_011_Validation_2_Drift", fill = TRUE, sep = "\t")
library(ggplot2)
library(dplyr)
library(patchwork)
validation<-read.table("2023_04_11_Validation_2_Drift", fill = TRUE, sep = "\t")
names(validation)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "minw","avtes", "avpopfreq", "fixed", "spacer_2", "phase", "fwcli","avcli","fixcli","spacer_4","avbias","3tot", "3cluster", "spacer 5", "sampleid")
data_1 <- validation[which(validation$sampleid == "pd250"),names(validation) %in% c("rep","fixed")]
gl_1<-ggplot(data_1,aes(x=fixed))+
geom_histogram(binwidth = 1)+
#  ylim(0,65)+
ggtitle("N = 250")+
geom_vline(xintercept=20, lwd=1,lty=2, colour="blue")
data_2 <- validation[which(validation$sampleid == "pd500"),names(validation) %in% c("rep","fixed")]
gl_2<-ggplot(data_2,aes(x=fixed))+
geom_histogram(binwidth = 1)+
#  ylim(0,65)+
ggtitle("N = 500")+
geom_vline(xintercept=10, lwd=1,lty=2, colour="blue")
data_3 <- validation[which(validation$sampleid == "pd1000"),names(validation) %in% c("rep","fixed")]
gl_3<-ggplot(data_3,aes(x=fixed))+
geom_histogram(binwidth = 1)+
#  ylim(0,65)+
ggtitle("N = 1000")+
geom_vline(xintercept=5, lwd=1,lty=2, colour="blue")
gl_1+gl_2+gl_3
setwd("~/github/Insertion-Bias-TE/Simulation-Results_Files/validation_3")
library(ggplot2)
library(RColorBrewer)
library(plyr)
library(gridExtra)
theme_set(theme_bw())
validation<-read.table("2023_02_21_Validation_3_piRNA_clusters", fill = TRUE, sep = "\t")
library(ggplot2)
library(RColorBrewer)
library(plyr)
library(gridExtra)
theme_set(theme_bw())
validation<-read.table("2023__04_11_Validation_3_piRNA_clusters", fill = TRUE, sep = "\t")
library(ggplot2)
library(RColorBrewer)
library(plyr)
library(gridExtra)
theme_set(theme_bw())
validation<-read.table("2023_04_11_Validation_3_piRNA_clusters", fill = TRUE, sep = "\t")
names(validation)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "minw","avtes", "avpopfreq", "fixed", "spacer_2", "phase", "fwcli","avcli","fixcli","spacer_3","avbias","3tot","3cluster","spacer_4","sampleids")
data_new <- validation
data_new$sampleid <- factor(data_new$sampleid,
levels = c("pc0", "pc50", "pc100"))
gl<-ggplot()+geom_line(data=data_new,aes(x=gen,group=rep,y=avtes*1000),alpha=0.4)+scale_y_log10()+theme(legend.position="none")+ylab("TE copies in population")+xlab("generation")+facet_grid(.~sampleid)
plot(gl)
g<-ggplot()+geom_line(data=data_new,aes(x=gen,group=rep,y=avtes),alpha=0.4)+
scale_y_log10()+
ylab("TEs insertions per diploid individual")+xlab("generation")+
facet_grid(.~sampleid)+
facet_wrap(~sampleid, ncol=3)
plot(g)
setwd("~/github/Insertion-Bias-TE/Simulation-Results_Files/validation_4")
library(ggplot2)
library(dplyr)
library(patchwork)
D0 = 0.25
Dnc_0.00<-((1-0.00)**(0:150))*D0
Dnc_0.01<-((1-0.01)**(0:150))*D0
Dnc_0.05<-((1-0.05)**(0:150))*D0
Dnc_0.1<-((1-0.1)**(0:150))*D0
Dnc_0.5<-((1-0.5)**(0:150))*D0
gen = c(0:150)
df<- data.frame(Dnc_0.00, Dnc_0.01, Dnc_0.05, Dnc_0.1, Dnc_0.5, gen)
gl<-ggplot(df, aes( x = gen))+
geom_line(aes(y = Dnc_0.00), color = "blue")+
geom_line(aes(y = Dnc_0.01), color = "green")+
geom_line(aes(y = Dnc_0.05), color = "yellow")+
geom_line(aes(y = Dnc_0.1), color = "orange")+
geom_line(aes(y = Dnc_0.5), color = "red")+
geom_label(aes(x = 48.5, y = 0.25,label = "c = 0.00"))+
geom_label(aes(x = 30, y = 0.185,label = "c = 0.01"))+
geom_label(aes(x = 18.5, y = 0.10,label = "c = 0.05"))+
geom_label(aes(x = 12, y = 0.07,label = "c = 0.1"))+
geom_label(aes(x = 4, y = 0.02,label = "c = 0.5"))+
xlim(0,50)+
ylab("D Linkage disequilibrium")+xlab("generation")
plot(gl)
t_8_1<-read.table("validation_4_1_debug", fill = TRUE, sep = "\t")
names(t_8_1)<-c("rep", "gen", "D")
g_8_1<-ggplot()+
geom_line(data = t_8_1, aes(x = gen, y = D, group = rep), color = "grey")+
geom_line(data = df, aes(x = gen, y = Dnc_0.00), color = "blue")+
xlab("generation")+ylab("D")+
ggtitle("c = 0")+
ylim(0, 0.25)
t_8_2<-read.table("validation_4_2_debug", fill = TRUE, sep = "\t")
names(t_8_2)<-c("rep", "gen", "D")
g_8_2<-ggplot()+
geom_line(data = t_8_2, aes(x = gen, y = D, group = rep), color = "grey")+
geom_line(data = df, aes(x = gen, y = Dnc_0.01), color = "green")+
xlab("generation")+ylab("D")+
ggtitle("c = 0.01")+
ylim(-0.01, 0.25)
t_8_3<-read.table("validation_4_3_debug", fill = TRUE, sep = "\t")
names(t_8_3)<-c("rep", "gen", "D")
g_8_3<-ggplot()+
geom_line(data = t_8_3, aes(x = gen, y = D, group = rep), color = "grey")+
geom_line(data = df, aes(x = gen, y = Dnc_0.05), color = "yellow")+
xlab("generation")+ylab("D")+
ggtitle("c = 0.05")+
ylim(-0.01, 0.25)
t_8_4<-read.table("validation_4_4_debug", fill = TRUE, sep = "\t")
names(t_8_4)<-c("rep", "gen", "D")
g_8_4<-ggplot()+
geom_line(data = t_8_4, aes(x = gen, y = D, group = rep), color = "grey")+
geom_line(data = df, aes(x = gen, y = Dnc_0.1), color = "orange")+
xlab("generation")+ylab("D")+
ggtitle("c = 0.1")+
ylim(-0.01, 0.25)
(g_8_1+g_8_2)/
(g_8_3+g_8_4)
