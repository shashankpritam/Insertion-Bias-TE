"b60" = "bias = 60",
"b50" = "bias = 50",
"b40" = "bias = 40",
"b30" = "bias = 30",
"b20" = "bias = 20",
"b10" = "bias = 10",
"b0" = "bias = 0",
"mb10" = "bias = -10",
"mb20" = "bias = -20",
"mb30" = "bias = -30",
"mb40" = "bias = -40",
"mb50" = "bias = -50",
"mb60" = "bias = -60",
"mb70" = "bias = -70",
"mb80" = "bias = -80",
"mb90" = "bias = -90",
"mb100" = "bias = -100")))
plot(g)
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame(df1)
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select (df2,-c(22))
df_count <- df2 %>%
dplyr::count(sampleid, phase)
df_summary <- df2 %>%
dplyr::group_by(sampleid, phase) %>%
dplyr::summarize(av_fwcli = mean(fwcli), sd_fwcli = sd(fwcli),
av_cli = mean(avcli), sd_cli = sd(avcli), cv_cli_percent = sd(avcli)/mean(avcli),
av_tes = mean(avtes), sd_tes = sd(avtes), cv_tes_percent = sd(avtes)/mean(avtes),
length_previous_phase = mean(gen),
sd_gen_phases = sd(gen))
df_summary <- cbind(df_count$n, df_summary)
colnames(df_summary)[1] ="n"
#CI 95%: z* sd/sqrt(population)
df_summary$ci_fwcli <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_fwcli/sqrt(df_summary$n))
df_summary$ci_cli <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_cli/sqrt(df_summary$n))
df_summary$ci_tes <- qt(0.975,df=df_summary$n-1)*(df_summary$sd_tes/sqrt(df_summary$n))
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x < nrow(df1) - 1) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x + 1
}
# Summary statistics
df2<-select(df2,-c(22))
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame(df1)
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select(df2,-c(22))
df_count <- df2 %>%
dplyr::count(sampleid, phase)
View(df_count)
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select(df2,-c(22))
#Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
#new dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck = 1
x = 1
y = 1
while (x<nrow(df1)) {
if (repcheck != df1[x, 1]){
y = 1
}
if (y == 1){
if(df1[x, 12]  == "shot"){
df2<-rbind(df2,df1[x,])
y = 2
repcheck = df1[x, 1]
}
}
if (y == 2){
if(df1[x, 12] == "inac"){
df2<-rbind(df2,df1[x,])
y = 1
}
}
x = x+1
}
#Summary statistics
df2<-select(df2,-c(22))
# Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck <- 1
x <- 1
y <- 1
while (x < nrow(df1)) {
if (repcheck != df1[x, 1]) {
y <- 1
}
if (y == 1) {
if (df1[x, 12] == "shot") {
df2 <- rbind(df2, df1[x, ])
y <- 2
repcheck <- df1[x, 1]
}
}
if (y == 2) {
if (df1[x, 12] == "inac") {
df2 <- rbind(df2, df1[x, ])
y <- 1
}
}
x <- x + 1
}
# Summary statistics
df2 <- subset(df2, select = -c(22))
df_count <- df2 %>%
dplyr::count(sampleid, phase)
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
g<-ggplot()+
geom_line(data=df,aes(x=gen,y=avtes,group=rep,color=phase), alpha = 1, linewidth = 0.7)+
xlab("generation")+
ylab("TEs insertions per diploid individual")+
theme(legend.position="none")+
scale_colour_manual(values=p)+
facet_wrap(~sampleid, labeller = labeller(sampleid =
c("b100" = "bias = 100",
"b90" = "bias = 90",
"b80" = "bias = 80",
"b70" = "bias = 70",
"b60" = "bias = 60",
"b50" = "bias = 50",
"b40" = "bias = 40",
"b30" = "bias = 30",
"b20" = "bias = 20",
"b10" = "bias = 10",
"b0" = "bias = 0",
"mb10" = "bias = -10",
"mb20" = "bias = -20",
"mb30" = "bias = -30",
"mb40" = "bias = -40",
"mb50" = "bias = -50",
"mb60" = "bias = -60",
"mb70" = "bias = -70",
"mb80" = "bias = -80",
"mb90" = "bias = -90",
"mb100" = "bias = -100")))
plot(g)
# Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck <- 1
x <- 1
y <- 1
while (x < nrow(df1)) {
if (repcheck != df1[x, 1]) {
y <- 1
}
if (y == 1) {
if (df1[x, 12] == "shot") {
df2 <- rbind(df2, df1[x, ])
y <- 2
repcheck <- df1[x, 1]
}
}
if (y == 2) {
if (df1[x, 12] == "inac") {
df2 <- rbind(df2, df1[x, ])
y <- 1
}
}
x <- x + 1
}
#Summary statistics
df2<-select(df2,-c(22))
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
df$phase
df$sampleid
df<-read.table("2023_03_21_Simulation_0_1_gen_exploration", fill = TRUE, sep = "\t")
names(df)<-c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed","spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias","3tot", "3cluster","spacer_4", "sampleid")
df$phase <- factor(df$phase, levels=c("rapi", "trig", "shot", "inac"))
df$sampleid <- factor(df$sampleid, levels=c("b100", "b90", "b80", "b70","b60", "b50","b40", "b30", "b20", "b10", "b0",
"mb10", "mb20","mb30", "mb40","mb50", "mb60","mb70", "mb80","mb90", "mb100"))
g<-ggplot()+
geom_line(data=df,aes(x=gen,y=avtes,group=rep,color=phase), alpha = 1, linewidth = 0.7)+
xlab("generation")+
ylab("TEs insertions per diploid individual")+
theme(legend.position="none")+
scale_colour_manual(values=p)+
facet_wrap(~sampleid, labeller = labeller(sampleid =
c("b100" = "bias = 100",
"b90" = "bias = 90",
"b80" = "bias = 80",
"b70" = "bias = 70",
"b60" = "bias = 60",
"b50" = "bias = 50",
"b40" = "bias = 40",
"b30" = "bias = 30",
"b20" = "bias = 20",
"b10" = "bias = 10",
"b0" = "bias = 0",
"mb10" = "bias = -10",
"mb20" = "bias = -20",
"mb30" = "bias = -30",
"mb40" = "bias = -40",
"mb50" = "bias = -50",
"mb60" = "bias = -60",
"mb70" = "bias = -70",
"mb80" = "bias = -80",
"mb90" = "bias = -90",
"mb100" = "bias = -100")))
plot(g)
# Divide in shot and inact pahses
df1 <- subset(df, phase %in% c("shot", "inac"))
# Divide in shot and inact pahses
df1 <- subset(df$phase %in% c("shot", "inac"))
# Divide in shot and inact pahses
df1 <- subset(df, df$phase %in% c("shot", "inac"))
df2 <- data.frame()
# Divide in shot and inact pahses
df1 <- subset(df, df$phase %in% c("shot", "inac"))
df2 <- data.frame()
# New dataframe with only the first shotgun & the first inactive phase of each replicate
repcheck <- 1
x <- 1
y <- 1
while (x < nrow(df1)) {
if (repcheck != df1[x, 1]) {
y <- 1
}
if (y == 1) {
if (df1[x, 12] == "shot") {
df2 <- rbind(df2, df1[x, ])
y <- 2
repcheck <- df1[x, 1]
}
}
if (y == 2) {
if (df1[x, 12] == "inac") {
df2 <- rbind(df2, df1[x, ])
y <- 1
}
}
x <- x + 1
}
#Summary statistics
df2<-select(df2,-c(22))
# check the unique values in the 'phase' column
unique(df$phase)
# count the number of rows in 'df' for each unique value of 'phase'
table(df$phase)
View(df)
# Load libraries
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
theme_set(theme_bw())
# Define palette
p <- c("#1a9850", "#ffd700", "#d73027")
# Read data and set column names
df0 <- read.table("2023_04_16_Validation_5_bias", fill = TRUE, sep = "\t")
setwd("~/")
setwd("/Users/shashankpritam/github/Insertion-Bias-TE/Simulation-Results_Files/validation_5.1")
# Load libraries
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
theme_set(theme_bw())
# Define palette
p <- c("#1a9850", "#ffd700", "#d73027")
# Read data and set column names
df0 <- read.table("2023_04_16_Validation_5_bias", fill = TRUE, sep = "\t")
names(df0) <- c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed", "spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias", "3tot", "3cluster", "spacer_4", "sampleid")
# Filter and select columns
df00 <- subset(df0, gen != 0)
df00 <- select(df00, -c(22))
# Calculate statistics
df0_stat <- df00 %>%
group_by(sampleid) %>%
summarize(fail = sum(popstat == "fail-0"),
success = sum(popstat == "ok"),
total = success + fail,
ok_rate = success/total)
# Modify sampleid values
df0_stat <- df0_stat %>%
mutate(sampleid = str_replace_all(sampleid, c("mb90" = "-90", "mb80" = "-80", "mb70" = "-70", "mb60" = "-60",
"mb50" = "-50", "mb40" = "-40", "mb30" = "-30", "mb20" = "-20",
"mb10" = "-10", "b90" = "90", "b80" = "80", "b70" = "70",
"b60" = "60", "b50" = "50", "b40" = "40", "b30" = "30",
"b20" = "20", "b10" = "10", "b0" = "0")))
# Convert sampleid to integer and sort
df0_stat$sampleid <- as.integer(df0_stat$sampleid)
df0_stat <- df0_stat[order(df0_stat$sampleid),]
# Create and plot the graph
g0 <- ggplot(data = df0_stat, aes(x = as.factor(sampleid), y = ok_rate, fill = ok_rate)) +
geom_col(show.legend = FALSE) +
geom_hline(yintercept = 0.8, linetype = "dashed", color = "red") +
scale_y_continuous(limits = c(0, 1), expand = expansion(mult = c(0, 0)), breaks = seq(0, 1, 0.2),
labels = scales::percent) +
scale_x_discrete(labels = setNames(c("-90", "-80", "-70", "-60", "-50", "-40", "-30", "-20", "-10", "0",
"10", "20", "30", "40", "50", "60", "70", "80", "90"),
unique(df0_stat$sampleid))) +
scale_fill_gradientn(colors = RColorBrewer::brewer.pal(3, "Dark2")) +
xlab("Insertion Bias") +
ylab("Successful Invasions (%)") +
theme_minimal() +
theme(text = element_text(size = 12))
plot(g0)
setwd("~/Documents/701/Survey")
---
title: "Survey"
data
data()
Survey.Data...Sheet1 <- read.delim2("~/Downloads/Survey Data - Sheet1.tsv")
View(Survey.Data...Sheet1)
Survey_Data <- read.delim2("~/Documents/701/Survey/Survey_Data.tsv")
View(Survey_Data)
View(Survey_Data)
Survey_Data <- read.delim2("~/Documents/701/Survey/Survey_Data.tsv")
View(Survey_Data)
Survey_Data <- read.delim2("~/Documents/701/Survey/Survey_Data.tsv")
View(Survey_Data)
clear
Survey_Data <- read.delim2("~/Documents/701/Survey/Survey_Data.tsv")
View(Survey_Data)
---
title: "Academic Stress & Mental Health Survey Results"
library(tidyverse)
# Load the data into R
survey_data <- read.delim("Survey_Data.tsv", sep="\t", header=TRUE)
# Take a look at the data
head(survey_data)
---
title: "Academic Stress and Mental Health Survey Results"
---
title: "Academic Stress and Mental Health Survey Results"
---
title: "Survey"
---
title: 'Survey'
---
title:
author: "Shashank Pritam"
library(tidyverse)
library(knitr)
# Load the data into R
survey_data <- read.delim("Survey_Data.tsv", sep="\t", header=TRUE)
# Plot the data using ggplot2
ggplot(data = survey_data, aes(x = Respondent, y = Stress_due_to_grades)) +
geom_line() +
ggtitle("Stress due to Grades") +
xlab("Respondent") +
ylab("Stress Level")
setwd("~/github/Insertion-Bias-TE/Simulation-Results_Files/validation_5.1")
# Load libraries
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
theme_set(theme_bw())
# Define palette
p <- c("#1a9850", "#ffd700", "#d73027")
# Read data and set column names
df0 <- read.table("2023_04_16_Validation_5_bias", fill = TRUE, sep = "\t")
names(df0) <- c("rep", "gen", "popstat", "spacer_1", "fwte", "avw", "min_w", "avtes", "avpopfreq",
"fixed", "spacer_2", "phase", "fwcli", "avcli", "fixcli", "spacer_3",
"avbias", "3tot", "3cluster", "spacer_4", "sampleid")
# Filter and select columns
df00 <- subset(df0, gen != 0)
df00 <- select(df00, -c(22))
# Calculate statistics
df0_stat <- df00 %>%
group_by(sampleid) %>%
summarize(fail = sum(popstat == "fail-0"),
success = sum(popstat == "ok"),
total = success + fail,
ok_rate = success/total)
# Modify sampleid values
df0_stat <- df0_stat %>%
mutate(sampleid = str_replace_all(sampleid, c("mb90" = "-90", "mb80" = "-80", "mb70" = "-70", "mb60" = "-60",
"mb50" = "-50", "mb40" = "-40", "mb30" = "-30", "mb20" = "-20",
"mb10" = "-10", "b90" = "90", "b80" = "80", "b70" = "70",
"b60" = "60", "b50" = "50", "b40" = "40", "b30" = "30",
"b20" = "20", "b10" = "10", "b0" = "0")))
# Convert sampleid to integer and sort
df0_stat$sampleid <- as.integer(df0_stat$sampleid)
df0_stat <- df0_stat[order(df0_stat$sampleid),]
# Create and plot the graph
g0 <- ggplot(data = df0_stat, aes(x = as.factor(sampleid), y = ok_rate, fill = ok_rate)) +
geom_col(show.legend = FALSE) +
geom_hline(yintercept = 0.8, linetype = "dashed", color = "red") +
scale_y_continuous(limits = c(0, 1), expand = expansion(mult = c(0, 0)), breaks = seq(0, 1, 0.2),
labels = scales::percent) +
scale_x_discrete(labels = setNames(c("-90", "-80", "-70", "-60", "-50", "-40", "-30", "-20", "-10", "0",
"10", "20", "30", "40", "50", "60", "70", "80", "90"),
unique(df0_stat$sampleid))) +
scale_fill_gradientn(colors = RColorBrewer::brewer.pal(3, "Dark2")) +
xlab("Insertion Bias") +
ylab("Successful Invasions (%)") +
theme_minimal() +
theme(text = element_text(size = 12))
plot(g0)
